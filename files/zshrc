export GREP_OPTIONS="--color=auto"

# zmodload zsh/zprof

zvm_config() {
 # Retrieve default cursor styles
 local ncur=$(zvm_cursor_style $ZVM_NORMAL_MODE_CURSOR)
 local icur=$(zvm_cursor_style $ZVM_INSERT_MODE_CURSOR)

 ZVM_NORMAL_MODE_CURSOR=$ncur'\e\e]12;#008800\a'
}

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
DEFAULT_USER="accessd"

# Set name of the theme to load
ZSH_THEME="dracula"

plugins=(
 # git
 # zsh-completions
 # zsh-vi-mode
 # zsh-autosuggestions
 # zsh-syntax-highlighting
)

# source $ZSH/oh-my-zsh.sh

# User configuration
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

export PYENV_ROOT="/Users/accessd/.pyenv"
export PYENV_SHELL="zsh"
export TERM="xterm-256color"

# No duplicate history when reverse-searching my commands
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=5000
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt incappendhistory
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Case insensitive completion
# autoload -U compinit && compinit
# zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# Load any custom after code
if [ -d $HOME/.zsh.after/ ]; then
 if [ "$(ls -A $HOME/.zsh.after/)" ]; then
   for config_file ($HOME/.zsh.after/*.zsh) source $config_file
 fi
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export SSL_CERT_FILE=/etc/ssl/cert.pem

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#33859d,bold"

printf "\e[?1042l"

PROMPT='%f%F{43}la%f%F{44}pt%f%F{38}op%f%F{44}:%1~/%f %F{44}%#%f '


# zprof
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# https://github.com/agkozak/zsh-z
source ~/bin/zsh-z.plugin.zsh

autoload -U compinit; compinit
zstyle ':completion:*' menu select

# source ~/bin/tmuxinator.zsh

bindkey -v

bindkey "^A"   beginning-of-line                    # ctrl-a
bindkey "^B"   backward-char                        # ctrl-b
bindkey "^E"   end-of-line                          # ctrl-e
bindkey "^D"   delete-char                          # ctrl-d
bindkey "^K"   kill-line                            # ctrl-k
bindkey "^N"   down-line-or-search                  # ctrl-n
bindkey "^P"   up-line-or-search                    # ctrl-p
bindkey "^R"   history-incremental-search-backward  # ctrl-r
bindkey "^[[B" history-search-forward               # down arrow
bindkey "^[[A" history-search-backward              # up arrow

set -o vi
export EDITOR=nvim
export VISUAL=nvim

# export NVM_DIR=~/.nvm
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export NVM_DIR="$HOME/.nvm"
# [ -s "$(brew --prefix nvm)/nvm.sh" ] && . "$(brew --prefix nvm)/nvm.sh"  # This loads nvm
# [ -s "$(brew --prefix nvm)/etc/bash_completion.d/nvm" ] && . "$(brew --prefix nvm)/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
# eval "$(/Users/accessd/.local/bin/mise activate zsh --shims)"

#eval "$(mise activate zsh)" # this sets up interactive sessions

# eval "$(starship init zsh)"
eval "$(direnv hook zsh)"
# source /usr/local/opt/spaceship/spaceship.zsh
eval "$(~/.local/bin/mise activate zsh)"

# opencode
export PATH=/Users/accessd/.opencode/bin:$PATH

# bun completions
# [ -s "/Users/accessd/.bun/_bun" ] && source "/Users/accessd/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
