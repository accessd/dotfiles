# Screen like binding
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

set -g xterm-keys on

# Bigger history
set -g history-limit 10000

# renumber all windows when any window is closed
set -g renumber-windows on

# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

set-option -sa terminal-features ',xterm-256color:RGB'
set-option -ga terminal-features ",xterm-256color:usstyle"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

set -g status-interval 2

# Allows for faster key repetition
set -s escape-time 0

# Activity monitoring
setw -g monitor-activity off
set -g visual-activity off
set -g visual-bell off
set -g visual-silence on

bind [ copy-mode
unbind ]
bind ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Bind ']' to use pbpaste
bind ] run "pbpaste | tmux load-buffer - && tmux paste-buffer"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h
bind-key ^V split-window -h
bind-key s split-window
bind-key ^S split-window

# Jump to the last session
bind-key h switch-client -l

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'
bind-key -n C-\\ if -F "#{@pane-is-vim}" 'send-keys C-\\' 'select-pane -l'

# Smart pane resizing with awareness of Neovim splits.
# bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
# bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
# bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
# bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# set -g status-right '#(gitmux "#{pane_current_path}")'
# set -g status-right ''

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# clear history
bind-key k send-keys -R \; clear-history \; send-keys "clear" C-m

# force a reload of the config kile
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Copy-paste integration
set -g default-shell $SHELL

set-option -g set-titles on
set-option -g set-titles-string "#{session_name}"

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'thuantanphamfilms/tmux-fzf-session-switch'
# set -g @plugin 'shaneog/tmux-colors-gotham'
# set -g @plugin 'catppuccin/tmux'

set -g pane-border-lines "heavy"

set -g @plugin "arcticicestudio/nord-tmux"

set -g @plugin 'niksingh710/minimal-tmux-status'
# set -g status-left ""
# set -g status-right-length 0
# set -g @minimal-tmux-status-left "[#S]"
# set -g @minimal-tmux-status-right ""
set -g @minimal-tmux-status-right '#(gitmux "#{pane_current_path}")'
# set -g @minimal-tmux-fg "#98d1ce"
# set -g @minimal-tmux-bg "#0a0f14"
set -g @minimal-tmux-justify "left"

set-option -g @fzf-goto-session-only 'true'

run '~/.tmux/plugins/tpm/tpm'
